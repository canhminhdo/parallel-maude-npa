Tue Apr 24 18:57:17 CEST 2018
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude alpha116 built: Mar 16 2018 17:40:28
	    Copyright 1997-2017 SRI International
		   Tue Apr 24 18:57:17 2018

	    Maude-NPA Version: 3.1.1 (April 24th 2018)
	    with direct composition and irreducibility constraints
	    (To be run with Maude alpha 115 or above)
	    Copyright (c) 2018, University of Illinois
	    All rights reserved.

 Commands:
 red unification? .           returns the unification algorithm to be used
 red new-strands? .           returns the actual protocol strands
 red displayGrammars .        for generating grammars
 red run(X,Y).                for Y backwards analysis steps for attack pattern
    X
 red debug(X,Y).              more information than run command
 red digest(X,Y).             less information than run command
 red summary(X,Y).            for summary of analysis steps
 red ids(X,Y).                for set of state ids
 red initials(X,Y).           for showing only initial steps
==========================================
reduce in MAUDE-NPA : summary(0, (1).NzNat) .
rewrites: 2243043 in 5292ms cpu (18242ms real) (423855 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 2) .
rewrites: 73222 in 220ms cpu (651ms real) (332827 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 3) .
rewrites: 235295 in 528ms cpu (1617ms real) (445634 rewrites/second)
result Summary: States>> 2 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 4) .
rewrites: 257354 in 288ms cpu (857ms real) (893590 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 5) .
rewrites: 353967 in 524ms cpu (1643ms real) (675509 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 6) .
rewrites: 193591 in 208ms cpu (724ms real) (930725 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 7) .
rewrites: 1295627 in 1568ms cpu (4676ms real) (826292 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 8) .
rewrites: 179563 in 180ms cpu (508ms real) (997572 rewrites/second)
result Summary: States>> 1 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(0, 9) .
rewrites: 168289 in 164ms cpu (570ms real) (1026152 rewrites/second)
result Summary: States>> 1 Solutions>> 1
==========================================
reduce in MAUDE-NPA : initials(0,9) .
rewrites: 373 in 0ms cpu (0ms real) (~ rewrites/second)
result ShortIdSystem: < 1 . 1 . 1 . 1 . 1 . 1 . 0 . 1 . 2 . 1 . 1 > (
:: nil ::
[ nil | 
   {yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(
    Fr(#0:Fresh), 1 + 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh)) ++ YubiPress(Fr(
    #0:Fresh), 1 + 1)}, 
   -(Fr(#0:Fresh) ; Fr(#3:Fresh) ; senc(Fr(#1:Fresh) ; (1 + 1) ; Fr(#4:Fresh),
    Fr(#2:Fresh))), 
   -(1), 
   (1 + 1) eq (1 + 1), 
   {yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(
    Fr(#0:Fresh), 1 + 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1 + 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh)) ++ YubiPress(Fr(
    #0:Fresh), 1 + 1) ++ Login(Fr(#0:Fresh), Fr(#1:Fresh), 1 + 1, senc(Fr(
    #1:Fresh) ; (1 + 1) ; Fr(#4:Fresh), Fr(#2:Fresh))) ++ LoginCounter(Fr(
    #0:Fresh), 1, 1 + 1)}, nil]  & 
:: nil ::
[ nil | 
   {yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(
    Fr(#0:Fresh), 1 + 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1 + 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh)) ++ YubiPress(Fr(
    #0:Fresh), 1 + 1) ++ Login(Fr(#0:Fresh), Fr(#1:Fresh), 1 + 1, senc(Fr(
    #1:Fresh) ; (1 + 1) ; Fr(#4:Fresh), Fr(#2:Fresh))) ++ LoginCounter(Fr(
    #0:Fresh), 1, 1 + 1)}, nil]  & 
:: #3:Fresh,#4:Fresh ::
[ nil | 
   {yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(
    Fr(#0:Fresh), 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh))}, 
   -(1), 
   +(Fr(#0:Fresh) ; Fr(#3:Fresh) ; senc(Fr(#1:Fresh) ; (1 + 1) ; Fr(#4:Fresh),
    Fr(#2:Fresh))), 
   {yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(
    Fr(#0:Fresh), 1 + 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh)) ++ YubiPress(Fr(
    #0:Fresh), 1 + 1)}, nil]  & 
:: #1:Fresh,#2:Fresh,#0:Fresh ::
[ nil | 
   +(init), 
   {yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(
    Fr(#0:Fresh), 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh))}, nil] )
| 
(Fr(#0:Fresh) ; Fr(#3:Fresh) ; senc(Fr(#1:Fresh) ; (1 + 1) ; Fr(#4:Fresh), Fr(
    #2:Fresh))) !inI
| 
+(init), 
{yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(Fr(
    #0:Fresh), 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh))}, 
-(1), 
+(Fr(#0:Fresh) ; Fr(#3:Fresh) ; senc(Fr(#1:Fresh) ; (1 + 1) ; Fr(#4:Fresh), Fr(
    #2:Fresh))), 
{yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(Fr(
    #0:Fresh), 1 + 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh)) ++ YubiPress(Fr(
    #0:Fresh), 1 + 1)}, 
resuscitated(Fr(#0:Fresh) ; Fr(#3:Fresh) ; senc(Fr(#1:Fresh) ; (1 + 1) ; Fr(
    #4:Fresh), Fr(#2:Fresh))), 
-(Fr(#0:Fresh) ; Fr(#3:Fresh) ; senc(Fr(#1:Fresh) ; (1 + 1) ; Fr(#4:Fresh), Fr(
    #2:Fresh))), 
-(1), 
{yubikey -> yubikey ;; 1-1 ;; Y(Fr(#0:Fresh), Fr(#1:Fresh)) @ YubiCounter(Fr(
    #0:Fresh), 1 + 1) @ SharedKey(Fr(#0:Fresh), Fr(#2:Fresh)) @ Server(Fr(
    #0:Fresh), Fr(#1:Fresh), 1 + 1) |> Init(Fr(#0:Fresh), Fr(#2:Fresh)) ++
    ExtendedInit(Fr(#0:Fresh), Fr(#1:Fresh), Fr(#2:Fresh)) ++ YubiPress(Fr(
    #0:Fresh), 1 + 1) ++ Login(Fr(#0:Fresh), Fr(#1:Fresh), 1 + 1, senc(Fr(
    #1:Fresh) ; (1 + 1) ; Fr(#4:Fresh), Fr(#2:Fresh))) ++ LoginCounter(Fr(
    #0:Fresh), 1, 1 + 1)}
| 
nil
Bye.
Tue Apr 24 18:57:53 CEST 2018
