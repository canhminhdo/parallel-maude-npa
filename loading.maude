fmod SEQUENCE is
    pr QID .
    sort ViewCmd ModuleCmd Seq .
    subsort ViewCmd ModuleCmd < Seq .
    op v : Qid -> ViewCmd .
    op m : Qid -> ModuleCmd .
    op __  : Seq Seq -> Seq [assoc id: nil] .
    op nil : -> Seq .

    op prelude : -> Seq .
    eq prelude =    m('TRUTH-VALUE)
                    m('BOOL-OPS)
                    m('TRUTH)
                    m('BOOL)
                    m('EXT-BOOL)
                    m('NAT)
                    m('INT)
                    m('RAT)
                    m('FLOAT)
                    m('STRING)
                    m('CONVERSION)
                    m('RANDOM)
                    m('BOUND)
                    m('QID)
                    m('TRIV)
                    v('TRIV)
                    v('Bool)
                    v('Nat)
                    v('Int)
                    v('Rat)
                    v('Float)
                    v('String)
                    v('Qid)
                    m('STRICT-WEAK-ORDER)
                    v('STRICT-WEAK-ORDER)
                    m('STRICT-TOTAL-ORDER)
                    v('STRICT-TOTAL-ORDER)
                    v('Nat<)
                    v('Int<)
                    v('Rat<)
                    v('Float<)
                    v('String<)
                    m('TOTAL-PREORDER)
                    v('TOTAL-PREORDER)
                    m('TOTAL-ORDER)
                    v('TOTAL-ORDER)
                    v('Nat<=)
                    v('Int<=)
                    v('Rat<=)
                    v('Float<=)
                    v('String<=)
                    m('DEFAULT)
                    v('DEFAULT)
                    v('Nat0)
                    v('Int0)
                    v('Rat0)
                    v('Float0)
                    v('String0)
                    v('Qid0)
                    m('LIST)
                    --- v('List)
                    m('WEAKLY-SORTABLE-LIST)
                    --- v('WeaklySortableList)
                    m('SORTABLE-LIST)
                    --- v('SortableList)
                    m('WEAKLY-SORTABLE-LIST')
                    --- v('WeaklySortableList')
                    m('SORTABLE-LIST')
                    --- v('SortableList')
                    m('SET)
                    --- v('Set)
                    m('LIST-AND-SET)
                    m('SORTABLE-LIST-AND-SET)
                    m('SORTABLE-LIST-AND-SET')
                    m('LIST*)
                    --- v('List*)
                    m('SET*)
                    --- v('Set*)
                    m('MAP)
                    --- v('Map)
                    m('ARRAY)
                    --- v('Array)
                    m('NAT-LIST)
                    m('QID-LIST)
                    m('QID-SET)
                    m('META-TERM)
                    m('META-CONDITION)
                    m('META-STRATEGY)
                    m('META-MODULE)
                    m('META-VIEW)
                    m('META-LEVEL)
                    m('LEXICAL)
                    m('COUNTER)
                    m('LOOP-MODE)
                    m('CONFIGURATION) .

    op maudenpa : -> Seq .
    eq maudenpa =  m('BANNER-MAUDENPA)
                    m('META-LEVEL-MNPA)
                    m('UNIFICATIONTRIPLE)
                    m('TERM-HANDLING)
                    m('SUBSTITUTION-HANDLING)
                    m('TERMSET)
                    m('RENAMING)
                    m('SUBSTITUTIONSET)
                    m('UNIFICATIONPAIRSET)
                    m('UNIFICATIONTRIPLESET)
                    m('MODULE-HANDLING)
                    m('VARIANT)
                    m('META-MINIMIZE-BINDINGS)
                    m('TYPEOFNARROWING)
                    m('IRR-FLAGS)
                    m('EFLAGS)
                    m('RESULT-CONTEXT-SET)
                    m('META-MATCH)
                    m('VARIANT-HANDLING)
                    m('RIGIDIFE)
                    m('META-E-UNIFICATION)
                    m('META-ACU-UNIFICATION)
                    m('META-UNIFICATION)
                    m('HEunification)
                    m('XorUnif)
                    m('AsyXorUnif)
                    m('CHECKXOR)
                    m('META-MSG-UNIFICATION-INTEGRATION)
                    m('META-MSG-UNIFICATION)
                    m('ORDERS-TERM-SUBSTITUTION)
                    m('META-NORMALIZE)
                    m('META-E-NARROWING)
                    m('META-NARROWING-SEARCH)
                    m('DEFINITION-PROTOCOL-RULES)
                    m('GLOBAL-STRATEGY)
                    m('DEFINITION-CONSTRAINTS)
                    m('PROTOCOL-EXAMPLE-SYMBOLS)
                    m('PROTOCOL-EXAMPLE-ALGEBRAIC)
                    --- m('PROTOCOL-SPECIFICATION)
                    m('STRAND-GENERAL-RULES)
                    m('COMPOSITION-RULES)
                    m('STRAND-EXAMPLE-RULES)
                    m('PROTOCOL-EXAMPLE-RULES)
                    m('STRAND-GENERAL-RULES-INPUT)
                    m('STRAND-EXAMPLE-RULES-INPUT)
                    m('DEFINITION-CONSTRAINTS-HANDLING)
                    m('DEFINITION-PROTOCOL-RULES-HANDLING)
                    m('PROTOCOL-EXAMPLE-SYMBOLS-WITH-CONSTRAINT-SYMBOLS-HANDLING)
                    m('DEFINITION-PA-SYMBOLS)
                    m('PA2NPA)
                    m('STRAND-EXAMPLE-RULES-WITH-ALL)
                    m('DEFINITION-PROTOCOL-RULES-INPUT)
                    m('DEFINITION-CONSTRAINTS-INPUT)
                    m('PROTOCOL-EXAMPLE-RULES-WITH-CONSTRAINT-SYMBOLS)
                    m('PROTOCOL-EXAMPLE-SYMBOLS-WITH-CONSTRAINT-SYMBOLS)
                    m('STRAND-EXAMPLE-RULES-WITH-DOLEVYAO-RULES-WITH-CONSTRAINT-SYMBOLS)
                    m('STRAND-EXAMPLE-RULES-WITH-DOLEVYAO-RULES-WITH-CONSTRAINT-SYMBOLS-METATERM)
                    m('PROTOCOL-SPECIFICATION) --- change order of this module
                    m('MAUDE-NPA-VARIANTS)
                    m('PROTOCOL-EXAMPLE-GHOST)
                    m('NORMALIZE-MNPA)
                    m('GENERATE-RULES)
                    m('RESULT-GRAMMAR-NARROWING)
                    m('CONSTRAINTS-RULES)
                    m('MEMBERSHIP-GRAMMAR-LANGUAGE)
                    m('GRAMMAR-RULE-EXPANDABLE-TEST)
                    m('GRAMMAR-NARROWING)
                    m('GRAMMAR-HEURISTICS)
                    m('GENERATION-CONSTRAINTS-RULES)
                    m('GENERATION-NEW-GRAMMAR)
                    m('OPTIMIZE-NEW-GRAMMAR)
                    m('GRAMMAR-GENERATION)
                    m('NEW-NEVER-PATTERNS-HANDLING)
                    m('BACK-NARROWING)
                    m('BACKWARDS-REACHABILITY)
                    m('GENERIC-TOOLS)
                    m('MAUDE-NPA)
                    --- m('MAUDE-NPA-EXT) --- we need to revise this, so we do not need to load it in the list
                    .
endfm