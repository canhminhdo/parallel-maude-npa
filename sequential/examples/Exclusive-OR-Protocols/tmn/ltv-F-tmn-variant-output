Tue Jun  2 19:21:58 CEST 2020
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	     Maude alpha128 built: Mar 10 2020 14:45:05
	     Copyright 1997-2020 SRI International
		   Tue Jun  2 19:21:58 2020

	    Maude-NPA Version: 3.1.4 (June 2nd 2020)
	    with direct composition, irreducibility constraints and time
	    (To be run with Maude alpha 121 or above)
	    Copyright (c) 2020, University of Illinois
	    All rights reserved.

 Commands:
 red unification? .           returns the unification algorithm to be used
 red new-strands? .           returns the actual protocol strands
 red displayGrammars .        for generating grammars
 red run(X,Y).                for Y backwards analysis steps for attack pattern
    X
 red debug(X,Y).              more information than run command
 red digest(X,Y).             less information than run command
 red summary(X,Y).            for summary of analysis steps
 red ids(X,Y).                for set of state ids
 red initials(X,Y).           for showing only initial steps
==========================================
reduce in MAUDE-NPA : genGrammars .
rewrites: 2153612 in 7620ms cpu (34113ms real) (282626 rewrites/second)
result GrammarList: (errorNoHeuristicApplied {
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL . ,
  '#0:Msg <- 'null.Null ; 
  '#1:Msg <- '#2:Name,
grl null inL => (pair(#2:Name, enc(#3:Nonce)),pair(#5:Name, enc(#3:Nonce))) inL
    . ,none,
grl (null * #7:NonceXOR) notInI,
   null notLeq n(i, #8:Fresh) => (pair(#2:Name, enc(#3:Nonce)),pair(#5:Name,
    enc(#3:Nonce))) inL . } usingGrammar 
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL .  ; 
grl #0:Msg inL => pair(#0:Msg, #1:Msg) inL .  ; 
grl #0:NonceXOR notInI,
   #0:NonceXOR notLeq n(i, #1:Fresh) => (#2:NonceXOR * #0:NonceXOR) inL .  ; 
grl (#1:NonceXOR * #0:NonceXOR) notInI,
   #0:NonceXOR notLeq n(i, #2:Fresh) => #0:NonceXOR inL . )
| (errorNoHeuristicApplied {
grl empty => (#1:NonceXOR * #2:NonceXOR) inL . ,none,
grl empty => (#1:NonceXOR,#2:NonceXOR) inL . ,none,
grl empty => (#1:NonceXOR,#2:NonceXOR) inL . } usingGrammar 
grl empty => (#1:NonceXOR * #2:NonceXOR) inL . )
| (
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL .  ; 
grl #0:Msg inL => pair(#0:Msg, #1:Msg) inL .  ; 
grl #0:Msg notInI,
   #0:Msg notLeq n(#1:Name, #2:Fresh) => enc(#0:Msg) inL . )
| (
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL .  ; 
grl #0:Msg inL => pair(#0:Msg, #1:Msg) inL .  ; 
grl enc(#0:Msg) notLeq enc(#1:Nonce) => enc(#0:Msg) inL . )
| (errorInconsistentExceptionsInGrammarRule 
grl n(#0:Name, #1:Fresh) notLeq n(#3:Name, #4:Fresh) => n(#0:Name, #1:Fresh)
    inL .  inGrammar 
grl #1:Msg inL => enc(#1:Msg) inL .  ; 
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL .  ; 
grl #0:Msg inL => pair(#0:Msg, #1:Msg) inL .  ; 
grl #0:Nonce inL => (#1:NonceXOR * #0:Nonce) inL .  ; 
grl n(#0:Name, #1:Fresh) notLeq n(#3:Name, #4:Fresh) => n(#0:Name, #1:Fresh)
    inL . )
| (
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL .  ; 
grl #0:Msg inL => pair(#0:Msg, #1:Msg) inL .  ; 
grl #0:Msg notInI => pair(#0:Msg, #1:Msg) inL . )
| (
grl #0:Msg inL => pair(#1:Msg, #0:Msg) inL .  ; 
grl #0:Msg inL => pair(#0:Msg, #1:Msg) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq null),
   (#0:Msg notLeq enc(n(#1:Name, #2:Fresh))),
   #0:Msg notLeq #3:Nonce * #4:Nonce => pair(#5:Msg, #0:Msg) inL . )
| errorNoHeuristicApplied {
grl empty => pair(#1:Msg, #2:Msg) inL . ,none,
grl empty => (#1:Msg,#2:Msg) inL . ,none,
grl empty => (#1:Msg,#2:Msg) inL . } usingGrammar 
grl empty => pair(#1:Msg, #2:Msg) inL . 
==========================================
reduce in MAUDE-NPA : run(0) .
rewrites: 3542 in 128ms cpu (513ms real) (27671 rewrites/second)
result ShortIdSystem: < 1 > 
:: r:Fresh ::
[ nil, 
   +(pair(b, enc(n(a, r:Fresh)))) | 
   -(pair(b, NB:Nonce * n(a, r:Fresh))), nil] 
| 
pair(b, NB:Nonce * n(a, r:Fresh)) inI,
n(a, r:Fresh) inI
| 
-(pair(b, NB:Nonce * n(a, r:Fresh)))
| 
nil
==========================================
reduce in MAUDE-NPA : summary(1) .
rewrites: 664553 in 1348ms cpu (5387ms real) (492991 rewrites/second)
result Summary: States>> 6 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(2) .
rewrites: 9344623 in 11800ms cpu (47206ms real) (791917 rewrites/second)
result Summary: States>> 8 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(3) .
rewrites: 28706009 in 39108ms cpu (133903ms real) (734018 rewrites/second)
result Summary: States>> 14 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(4) .
Terminated
Wed Jun  3 10:53:42 CEST 2020
