Tue Jun  2 19:21:58 CEST 2020
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	     Maude alpha128 built: Mar 10 2020 14:45:05
	     Copyright 1997-2020 SRI International
		   Tue Jun  2 19:21:58 2020

	    Maude-NPA Version: 3.1.4 (June 2nd 2020)
	    with direct composition, irreducibility constraints and time
	    (To be run with Maude alpha 121 or above)
	    Copyright (c) 2020, University of Illinois
	    All rights reserved.

 Commands:
 red unification? .           returns the unification algorithm to be used
 red new-strands? .           returns the actual protocol strands
 red displayGrammars .        for generating grammars
 red run(X,Y).                for Y backwards analysis steps for attack pattern
    X
 red debug(X,Y).              more information than run command
 red digest(X,Y).             less information than run command
 red summary(X,Y).            for summary of analysis steps
 red ids(X,Y).                for set of state ids
 red initials(X,Y).           for showing only initial steps
==========================================
reduce in MAUDE-NPA : genGrammars .
rewrites: 311756516 in 689924ms cpu (1334612ms real) (451870 rewrites/second)
result GrammarList: (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq n(#1:UName, #2:Fresh)),
   (#0:Msg notLeq t(#3:UName, #4:Fresh)),
   (#0:Msg notLeq e(#5:Sessionkey, #6:Nonce ; #7:Sessionkey)),
   (#0:Msg notLeq e(mkey(#8:UName, s), #8:UName ; #9:UName ; #10:Nonce ;
    seskey(#8:UName, #9:UName, n(s, #11:Fresh)) ; seskey(#8:UName, #9:UName, n(
    s, #12:Fresh)))),
   (#0:Msg notLeq #13:Nonce ; seskey(#14:UName, #15:UName, n(s, #16:Fresh)) ;
    seskey(#14:UName, #15:UName, n(s, #17:Fresh))),
   (#0:Msg notLeq #18:UName ; t(#18:UName, #19:Fresh) ; #20:Sessionkey),
   (#0:Msg notLeq #21:UName ; #22:Nonce ; seskey(#23:UName, #21:UName, n(s,
    #24:Fresh)) ; seskey(#23:UName, #21:UName, n(s, #25:Fresh))),
   (#0:Msg notLeq #26:UName ; n(#27:UName, #28:Fresh)),
   (#0:Msg notLeq t(#29:UName, #30:Fresh) ; #31:Sessionkey),
   (#0:Msg notLeq e(#32:Sessionkey, #33:Nonce ; #34:Sessionkey) ; n(#35:UName,
    #36:Fresh) ; e(mkey(#35:UName, s), #37:UName ; #35:UName ; t(#35:UName,
    #38:Fresh) ; #34:Sessionkey)),
   #0:Msg notLeq seskey(#39:UName, #40:UName, n(s, #41:Fresh)) => (#0:Msg ;
    #42:Msg) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq n(#1:UName, #2:Fresh)),
   (#0:Msg notLeq t(#3:UName, #4:Fresh)),
   (#0:Msg notLeq e(#5:Sessionkey, #6:Nonce ; #7:Sessionkey)),
   (#0:Msg notLeq e(mkey(#8:UName, s), #8:UName ; #9:UName ; #10:Nonce ;
    seskey(#8:UName, #9:UName, n(s, #11:Fresh)) ; seskey(#8:UName, #9:UName, n(
    s, #12:Fresh)))),
   (#0:Msg notLeq #13:Nonce ; seskey(#14:UName, #15:UName, n(s, #16:Fresh)) ;
    seskey(#14:UName, #15:UName, n(s, #17:Fresh))),
   (#0:Msg notLeq #18:UName ; t(#18:UName, #19:Fresh) ; #20:Sessionkey),
   (#0:Msg notLeq #21:UName ; #22:Nonce ; seskey(#23:UName, #21:UName, n(s,
    #24:Fresh)) ; seskey(#23:UName, #21:UName, n(s, #25:Fresh))),
   (#0:Msg notLeq #26:UName ; n(#27:UName, #28:Fresh)),
   (#0:Msg notLeq t(#29:UName, #30:Fresh) ; #31:Sessionkey),
   (#0:Msg notLeq e(#32:Sessionkey, #33:Nonce ; #34:Sessionkey) ; n(#35:UName,
    #36:Fresh) ; e(mkey(#35:UName, s), #37:UName ; #35:UName ; t(#35:UName,
    #38:Fresh) ; #34:Sessionkey)),
   #0:Msg notLeq seskey(#39:UName, #40:UName, n(s, #41:Fresh)) => (#42:UName ;
    #0:Msg) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq n(#1:UName, #2:Fresh)),
   (#0:Msg notLeq t(#3:UName, #4:Fresh)),
   (#0:Msg notLeq e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #8:Sessionkey)),
   (#0:Msg notLeq e(mkey(#9:UName, s), #10:UName ; #9:UName ; t(#9:UName,
    #11:Fresh) ; #12:Sessionkey)),
   (#0:Msg notLeq e(mkey(#13:UName, s), #14:UName ; #13:UName ; #15:Nonce ;
    seskey(#14:UName, #13:UName, n(s, #16:Fresh)) ; seskey(#14:UName,
    #13:UName, n(s, #17:Fresh)))),
   (#0:Msg notLeq #18:Nonce ; seskey(#19:UName, #20:UName, n(s, #21:Fresh)) ;
    seskey(#19:UName, #20:UName, n(s, #22:Fresh))),
   (#0:Msg notLeq #23:UName ; #24:Nonce ; seskey(#25:UName, #23:UName, n(s,
    #26:Fresh)) ; seskey(#25:UName, #23:UName, n(s, #27:Fresh))),
   (#0:Msg notLeq #28:UName ; t(#28:UName, #29:Fresh) ; #30:Sessionkey),
   (#0:Msg notLeq #31:UName ; n(#32:UName, #33:Fresh)),
   (#0:Msg notLeq n(#34:UName, #35:Fresh) ; e(mkey(#34:UName, s), #36:UName ;
    #34:UName ; t(#34:UName, #37:Fresh) ; #38:Sessionkey)),
   (#0:Msg notLeq t(#39:UName, #40:Fresh) ; #41:Sessionkey),
   (#0:Msg notLeq e(#42:Sessionkey, #43:Nonce ; #44:Sessionkey) ; n(#45:UName,
    #46:Fresh) ; e(mkey(#45:UName, s), #47:UName ; #45:UName ; t(#45:UName,
    #48:Fresh) ; #44:Sessionkey)),
   (#0:Msg notLeq seskey(#49:UName, #50:UName, n(s, #51:Fresh)) ; seskey(
    #49:UName, #50:UName, n(s, #52:Fresh))),
   #0:Msg notLeq seskey(#53:UName, #54:UName, n(s, #55:Fresh)) => (#0:Msg ;
    #56:Sessionkey) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq n(#1:UName, #2:Fresh)),
   (#0:Msg notLeq t(#3:UName, #4:Fresh)),
   (#0:Msg notLeq e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #8:Sessionkey)),
   (#0:Msg notLeq e(mkey(#9:UName, s), #10:UName ; #9:UName ; t(#9:UName,
    #11:Fresh) ; #12:Sessionkey)),
   (#0:Msg notLeq e(mkey(#13:UName, s), #14:UName ; #13:UName ; #15:Nonce ;
    seskey(#14:UName, #13:UName, n(s, #16:Fresh)) ; seskey(#14:UName,
    #13:UName, n(s, #17:Fresh)))),
   (#0:Msg notLeq #18:Nonce ; seskey(#19:UName, #20:UName, n(s, #21:Fresh)) ;
    seskey(#19:UName, #20:UName, n(s, #22:Fresh))),
   (#0:Msg notLeq #23:UName ; #24:Nonce ; seskey(#25:UName, #23:UName, n(s,
    #26:Fresh)) ; seskey(#25:UName, #23:UName, n(s, #27:Fresh))),
   (#0:Msg notLeq #28:UName ; t(#28:UName, #29:Fresh) ; #30:Sessionkey),
   (#0:Msg notLeq #31:UName ; n(#32:UName, #33:Fresh)),
   (#0:Msg notLeq n(#34:UName, #35:Fresh) ; e(mkey(#34:UName, s), #36:UName ;
    #34:UName ; t(#34:UName, #37:Fresh) ; #38:Sessionkey)),
   (#0:Msg notLeq t(#39:UName, #40:Fresh) ; #41:Sessionkey),
   (#0:Msg notLeq e(#42:Sessionkey, #43:Nonce ; #44:Sessionkey) ; n(#45:UName,
    #46:Fresh) ; e(mkey(#45:UName, s), #47:UName ; #45:UName ; t(#45:UName,
    #48:Fresh) ; #44:Sessionkey)),
   (#0:Msg notLeq seskey(#49:UName, #50:UName, n(s, #51:Fresh)) ; seskey(
    #49:UName, #50:UName, n(s, #52:Fresh))),
   #0:Msg notLeq seskey(#53:UName, #54:UName, n(s, #55:Fresh)) => (#0:Msg ;
    #56:Sessionkey ; #57:Sessionkey) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq n(#1:UName, #2:Fresh)),
   (#0:Msg notLeq t(#3:UName, #4:Fresh)),
   (#0:Msg notLeq e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #8:Sessionkey)),
   (#0:Msg notLeq e(mkey(#9:UName, s), #10:UName ; #9:UName ; t(#9:UName,
    #11:Fresh) ; #12:Sessionkey)),
   (#0:Msg notLeq e(mkey(#13:UName, s), #14:UName ; #13:UName ; #15:Nonce ;
    seskey(#14:UName, #13:UName, n(s, #16:Fresh)) ; seskey(#14:UName,
    #13:UName, n(s, #17:Fresh)))),
   (#0:Msg notLeq #18:Nonce ; seskey(#19:UName, #20:UName, n(s, #21:Fresh)) ;
    seskey(#19:UName, #20:UName, n(s, #22:Fresh))),
   (#0:Msg notLeq #23:UName ; #24:Nonce ; seskey(#25:UName, #23:UName, n(s,
    #26:Fresh)) ; seskey(#25:UName, #23:UName, n(s, #27:Fresh))),
   (#0:Msg notLeq #28:UName ; t(#28:UName, #29:Fresh) ; #30:Sessionkey),
   (#0:Msg notLeq #31:UName ; n(#32:UName, #33:Fresh)),
   (#0:Msg notLeq n(#34:UName, #35:Fresh) ; e(mkey(#34:UName, s), #36:UName ;
    #34:UName ; t(#34:UName, #37:Fresh) ; #38:Sessionkey)),
   (#0:Msg notLeq t(#39:UName, #40:Fresh) ; #41:Sessionkey),
   (#0:Msg notLeq e(#42:Sessionkey, #43:Nonce ; #44:Sessionkey) ; n(#45:UName,
    #46:Fresh) ; e(mkey(#45:UName, s), #47:UName ; #45:UName ; t(#45:UName,
    #48:Fresh) ; #44:Sessionkey)),
   (#0:Msg notLeq seskey(#49:UName, #50:UName, n(s, #51:Fresh)) ; seskey(
    #49:UName, #50:UName, n(s, #52:Fresh))),
   #0:Msg notLeq seskey(#53:UName, #54:UName, n(s, #55:Fresh)) => (#56:Msg ;
    #0:Msg) inL . )
| (errorNoHeuristicApplied {
grl empty => (#1:Msg ; #2:Msg) inL . ,none,
grl empty => (#1:Msg,#2:Msg) inL . ,none,
grl empty => (#1:Msg,#2:Msg) inL . } usingGrammar 
grl empty => (#1:Msg ; #2:Msg) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Key notInI => d(#0:Key, #1:Msg) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Msg notInI => d(#1:Key, #0:Msg) inL . )
| (errorNoHeuristicApplied {
grl empty => d(#1:Key, #2:Msg) inL . ,none,
grl empty => (#2:Msg,#1:Key) inL . ,none,
grl empty => (#2:Msg,#1:Key) inL . } usingGrammar 
grl empty => d(#1:Key, #2:Msg) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Key notInI,
   (#0:Key notLeq mkey(#1:UName, s)),
   #0:Key notLeq seskey(#2:UName, #3:UName, n(s, #4:Fresh)) => e(#0:Key,
    #5:Msg) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq mkey(#1:UName, s)),
   (#0:Msg notLeq e(#2:Sessionkey, #3:Nonce ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)),
   #0:Msg notLeq seskey(#9:UName, #10:UName, n(s, #11:Fresh)) => (
    #12:Sessionkey ; #0:Msg) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Msg notInI,
   (#0:Msg notLeq #1:Nonce ; #2:Sessionkey),
   (#0:Msg notLeq #3:UName ; #4:UName ; #5:Nonce ; seskey(#3:UName, #4:UName,
    n(s, #6:Fresh)) ; seskey(#3:UName, #4:UName, n(s, #7:Fresh))),
   #0:Msg notLeq #8:UName ; #9:UName ; t(#9:UName, #10:Fresh) ; #11:Sessionkey
    => e(#12:Key, #0:Msg) inL . )
| (errorNoHeuristicApplied {
grl empty => e(#1:Key, #2:Msg) inL . ,none,
grl empty => (#2:Msg,#1:Key) inL . ,none,
grl empty => (#2:Msg,#1:Key) inL . } usingGrammar 
grl empty => e(#1:Key, #2:Msg) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl (mkey(#0:Name, #1:Name) notLeq mkey(i, #2:Name)),
   mkey(#0:Name, #1:Name) notLeq mkey(#3:Name, i) => mkey(#0:Name, #1:Name) inL
    . )
| (errorInconsistentExceptionsInGrammarRule 
grl n(#0:Name, #1:Fresh) notLeq #4:Nonce => n(#0:Name, #1:Fresh) inL . 
    inGrammar 
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl n(#0:Name, #1:Fresh) notLeq #4:Nonce => n(#0:Name, #1:Fresh) inL . )
| (
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl #0:Nonce notInI,
   #0:Nonce notLeq n(s, #1:Fresh) => seskey(#2:Name, #3:Name, #0:Nonce) inL . )
| (errorInconsistentExceptionsInGrammarRule 
grl seskey(#0:Name, #1:Name, #2:Nonce) notLeq #5:Sessionkey => seskey(#0:Name,
    #1:Name, #2:Nonce) inL .  inGrammar 
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl seskey(#0:Name, #1:Name, #2:Nonce) notLeq #5:Sessionkey => seskey(#0:Name,
    #1:Name, #2:Nonce) inL . )
| errorInconsistentExceptionsInGrammarRule 
grl t(#0:Name, #1:Fresh) notLeq #4:Nonce => t(#0:Name, #1:Fresh) inL . 
    inGrammar 
grl #0:Msg inL => e(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => d(#1:Key, #0:Msg) inL .  ; 
grl #0:Msg inL => (#1:Msg ; #0:Msg) inL .  ; 
grl #0:Msg inL => (#0:Msg ; #1:Msg) inL .  ; 
grl t(#0:Name, #1:Fresh) notLeq #4:Nonce => t(#0:Name, #1:Fresh) inL . 
==========================================
reduce in MAUDE-NPA : run(0) .
rewrites: 4678 in 136ms cpu (135ms real) (34397 rewrites/second)
result ShortIdSystem: < 1 > 
:: r:Fresh,r':Fresh ::
[ nil, 
   -(MA:Msg ; e(mkey(B:UName, s), A:UName ; B:UName ; NA:Nonce ; SK:Sessionkey
    ; Kt:Sessionkey)), 
   +(MA:Msg ; e(Kt:Sessionkey, NA:Nonce ; SK:Sessionkey) ; n(B:UName, r:Fresh)
    ; e(mkey(B:UName, s), A:UName ; B:UName ; t(B:UName, r':Fresh) ;
    SK:Sessionkey)) | 
   -(e(Kt:Sessionkey, NA:Nonce ; SK:Sessionkey) ; e(mkey(B:UName, s), A:UName ;
    B:UName ; t(B:UName, r':Fresh) ; SK:Sessionkey)), nil] 
| 
(e(Kt:Sessionkey, NA:Nonce ; SK:Sessionkey) ; e(mkey(B:UName, s), A:UName ;
    B:UName ; t(B:UName, r':Fresh) ; SK:Sessionkey)) inI
| 
-(e(Kt:Sessionkey, NA:Nonce ; SK:Sessionkey) ; e(mkey(B:UName, s), A:UName ;
    B:UName ; t(B:UName, r':Fresh) ; SK:Sessionkey))
| 
nil
==========================================
reduce in MAUDE-NPA : summary(1) .
rewrites: 6206513 in 9536ms cpu (10630ms real) (650850 rewrites/second)
result Summary: States>> 2 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(2) .
rewrites: 8337927 in 13816ms cpu (15188ms real) (603497 rewrites/second)
result Summary: States>> 4 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(3) .
rewrites: 20180678 in 29812ms cpu (31420ms real) (676931 rewrites/second)
result Summary: States>> 14 Solutions>> 0
==========================================
reduce in MAUDE-NPA : summary(4) .
rewrites: 111526786 in 141972ms cpu (151947ms real) (785554 rewrites/second)
result Summary: States>> 41 Solutions>> 1
==========================================
reduce in MAUDE-NPA : run(1) .
rewrites: 116 in 0ms cpu (0ms real) (~ rewrites/second)
result IdSystemSet: (< 1 . 5 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#6:Fresh ::
[ nil, 
   -(#7:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#7:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #6:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) inI
| 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
< 1 . 6 > (
:: #0:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #8:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; n(#1:UName, #0:Fresh)
    ; #3:Sessionkey ; #4:Sessionkey)), 
   +(#10:Msg ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; n(
    #6:UName, #9:Fresh) ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName, s),
    #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) inI
| 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
| 
nil
==========================================
reduce in MAUDE-NPA : run(2) .
rewrites: 175 in 0ms cpu (0ms real) (~ rewrites/second)
result IdSystemSet: (< 1 . 5 . 2 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #2:Fresh,#7:Fresh ::
[ nil, 
   -(#8:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#8:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)) inI
| 
-(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 6 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#6:Fresh ::
[ nil, 
   -(#7:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#7:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #6:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) inI
| 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 6 . 3 > (
:: #0:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #6:Fresh,#8:Fresh ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ;
    n(#1:UName, #0:Fresh) ; #3:Sessionkey ; #4:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), 
   -(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ;
    n(#1:UName, #0:Fresh) ; #3:Sessionkey ; #4:Sessionkey)) inI
| 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ;
    n(#1:UName, #0:Fresh) ; #3:Sessionkey ; #4:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#1:UName, #0:Fresh) ;
    #3:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#1:UName, #0:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #3:Sessionkey))
| 
nil)
< 1 . 6 . 8 > (
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#10:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #9:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    inI
| 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil
==========================================
reduce in MAUDE-NPA : run(3) .
rewrites: 337 in 0ms cpu (0ms real) (~ rewrites/second)
result IdSystemSet: (< 1 . 5 . 2 . 2 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
   +(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#8:Fresh ::
[ nil, 
   -(#9:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#9:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) inI
| 
-(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
+(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 2 . 7 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#6:Sessionkey, n(#7:UName, #8:Fresh) ; #9:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #8:Fresh ::
[ nil, 
   +(#7:UName ; #10:UName ; n(#7:UName, #8:Fresh)) | 
   -(e(mkey(#7:UName, s), #7:UName ; #10:UName ; n(#7:UName, #8:Fresh) ;
    #9:Sessionkey ; #6:Sessionkey) ; e(#6:Sessionkey, n(#7:UName, #8:Fresh) ;
    #9:Sessionkey) ; #11:Nonce ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(
    #0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(#6:Sessionkey, n(#7:UName, #8:Fresh) ; #9:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#12:Fresh ::
[ nil, 
   -(#13:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#13:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #12:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
(e(#6:Sessionkey, n(#7:UName, #8:Fresh) ; #9:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#7:UName, s), #7:UName ; #10:UName ; n(#7:UName, #8:Fresh) ;
    #9:Sessionkey ; #6:Sessionkey) ; e(#6:Sessionkey, n(#7:UName, #8:Fresh) ;
    #9:Sessionkey) ; #11:Nonce ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(
    #0:UName, #2:Fresh) ; #3:Sessionkey)) inI
| 
-(e(mkey(#7:UName, s), #7:UName ; #10:UName ; n(#7:UName, #8:Fresh) ;
    #9:Sessionkey ; #6:Sessionkey) ; e(#6:Sessionkey, n(#7:UName, #8:Fresh) ;
    #9:Sessionkey) ; #11:Nonce ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(
    #0:UName, #2:Fresh) ; #3:Sessionkey)), 
+(e(#6:Sessionkey, n(#7:UName, #8:Fresh) ; #9:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#6:Sessionkey, n(#7:UName, #8:Fresh) ; #9:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 6 . 2 > (
:: nil ::
[ nil | 
   +(mkey(i, s)), nil]  & 
:: nil ::
[ nil | 
   -(mkey(i, s)), 
   -(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
   +(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
   -(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ;
    t(i, #1:Fresh) ; #2:Sessionkey)), nil]  & 
:: #1:Fresh,#5:Fresh ::
[ nil, 
   -(#6:Msg ; e(mkey(i, s), #0:UName ; i ; #4:Nonce ; #2:Sessionkey ;
    #3:Sessionkey)), 
   +(#6:Msg ; e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; n(i, #5:Fresh) ; e(
    mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)) | 
   -(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ;
    t(i, #1:Fresh) ; #2:Sessionkey)), nil] )
| 
mkey(i, s) !inI,
e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) !inI,
(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(i,
    #1:Fresh) ; #2:Sessionkey)) !inI,
(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) inI
| 
+(mkey(i, s)), 
-(mkey(i, s)), 
-(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
+(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
-(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)), 
+(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(
    i, #1:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(
    i, #1:Fresh) ; #2:Sessionkey))
| ghost(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)))
(< 1 . 5 . 6 . 8 > (
:: nil ::
[ nil | 
   -(#6:Key), 
   -(e(#6:Key, #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#7:Fresh ::
[ nil, 
   -(#8:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#8:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
e(#6:Key, #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) inI
| 
-(#6:Key), 
-(e(#6:Key, #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
+(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(#6:Key),
ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 6 . 11 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   -(#1:UName), 
   +(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: #2:Fresh,#6:Fresh ::
[ nil, 
   -(#7:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#7:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #6:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) inI
| 
-(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#1:UName), 
+(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 6 . 3 . 7 > (
:: #0:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
   +(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ;
    seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), nil]  & 
:: #3:Fresh,#4:Fresh ::
[ nil | 
   -(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), nil]  & 
:: #5:Fresh,#6:Fresh ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
   -(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ;
    seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), nil] )
| 
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))) !inI,
(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))) !inI,
(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)) inI
| 
-(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
+(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), 
-(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh))))
| 
nil)
(< 1 . 6 . 3 . 6{1} > (
:: nil ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#2:UName, s), #2:UName ; #2:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #2:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#2:UName, #7:Fresh) ; e(mkey(#2:UName, s), #2:UName ;
    #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#2:UName,
    s), #2:UName ; #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh,#8:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#2:UName, s), #2:UName ; #2:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#2:UName, #7:Fresh) ; e(mkey(#2:UName, s), #2:UName ;
    #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#2:UName,
    s), #2:UName ; #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#2:UName, s),
    #2:UName ; #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#2:UName, s), #2:UName ; #2:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#2:UName, #7:Fresh) ; e(mkey(#2:UName, s), #2:UName ;
    #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI
| 
-(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#2:UName, s), #2:UName ; #2:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#2:UName, s), #2:UName ; #2:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#2:UName, #7:Fresh) ; e(mkey(#2:UName, s), #2:UName ;
    #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #2:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#2:UName, #7:Fresh) ; e(mkey(#2:UName, s), #2:UName ;
    #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#2:UName,
    s), #2:UName ; #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#2:UName,
    s), #2:UName ; #2:UName ; t(#2:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{2} > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh,#8:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,(
#1:UName != #2:UName),(
#2:UName != #0:UName),(
#2:UName != #6:UName),
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) != e(mkey(#0:UName, s), #1:UName ; #0:UName
    ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
| 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 3 > (
:: nil ::
[ nil | 
   -(#9:Msg ; e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#11:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #10:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(#9:Msg ; e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)) inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    inI
| 
-(#9:Msg ; e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 4 > (
:: nil ::
[ nil | 
   -(#9:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ;
    #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh)
    ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#11:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #10:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) inI,
(#9:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ;
    e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)) inI
| 
-(#9:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ;
    e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 5 > (
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#11:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #10:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg) inI
| 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 6 > (
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)) ; #9:Msg), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#11:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #10:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) inI,
((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    ; #9:Msg) inI
| 
-((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    ; #9:Msg), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 11 > (
:: nil ::
[ nil | 
   -(mkey(#1:UName, s)), 
   -(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#10:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #9:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
mkey(#1:UName, s) inI,
(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey)
    inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    inI
| 
-(mkey(#1:UName, s)), 
-(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey),
    
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
< 1 . 6 . 8 . 12 > (
:: nil ::
[ nil | 
   -(#4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName,
    #7:Fresh) ; #3:Sessionkey)), 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#10:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #9:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) inI,
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) inI,
(#4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)) inI
| 
-(#4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil
==========================================
reduce in MAUDE-NPA : run(4) .
rewrites: 855 in 0ms cpu (0ms real) (~ rewrites/second)
result IdSystemSet: (< 1 . 5 . 2 . 2 . 2 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
   +(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#8:Msg ; #7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(
    #0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#10:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #9:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)) !inI,
(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
(#8:Msg ; #7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(
    #0:UName, #2:Fresh) ; #3:Sessionkey)) inI
| 
-(#8:Msg ; #7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(
    #0:UName, #2:Fresh) ; #3:Sessionkey)), 
+(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
-(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
+(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 2 . 2 . 3 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
   +(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) ; #8:Msg), 
   +(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#10:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #9:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)) !inI,
(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
((#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) ; #8:Msg) inI
| 
-((#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) ; #8:Msg), 
+(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
-(#7:Msg ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)), 
+(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 2 . 2 . 7 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#7:Sessionkey, n(#8:UName, #9:Fresh) ; #10:Sessionkey) ; #6:Msg ; e(
    mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   +(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh)
    ; #3:Sessionkey)), nil]  & 
:: #9:Fresh ::
[ nil, 
   +(#8:UName ; #11:UName ; n(#8:UName, #9:Fresh)) | 
   -(e(mkey(#8:UName, s), #8:UName ; #11:UName ; n(#8:UName, #9:Fresh) ;
    #10:Sessionkey ; #7:Sessionkey) ; e(#7:Sessionkey, n(#8:UName, #9:Fresh) ;
    #10:Sessionkey) ; #12:Nonce ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(#7:Sessionkey, n(#8:UName, #9:Fresh) ; #10:Sessionkey) ; #6:Msg ; e(
    mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #2:Fresh,#13:Fresh ::
[ nil, 
   -(#14:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#14:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #13:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
(e(#7:Sessionkey, n(#8:UName, #9:Fresh) ; #10:Sessionkey) ; #6:Msg ; e(mkey(
    #0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#8:UName, s), #8:UName ; #11:UName ; n(#8:UName, #9:Fresh) ;
    #10:Sessionkey ; #7:Sessionkey) ; e(#7:Sessionkey, n(#8:UName, #9:Fresh) ;
    #10:Sessionkey) ; #12:Nonce ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) inI
| 
-(e(mkey(#8:UName, s), #8:UName ; #11:UName ; n(#8:UName, #9:Fresh) ;
    #10:Sessionkey ; #7:Sessionkey) ; e(#7:Sessionkey, n(#8:UName, #9:Fresh) ;
    #10:Sessionkey) ; #12:Nonce ; #6:Msg ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
+(e(#7:Sessionkey, n(#8:UName, #9:Fresh) ; #10:Sessionkey) ; #6:Msg ; e(mkey(
    #0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#7:Sessionkey, n(#8:UName, #9:Fresh) ; #10:Sessionkey) ; #6:Msg ; e(mkey(
    #0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
+(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(#6:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 6 . 2 . 4 > (
:: nil ::
[ nil | 
   +(mkey(i, s)), nil]  & 
:: nil ::
[ nil | 
   -(#5:Key), 
   -(e(#5:Key, #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
   +(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(mkey(i, s)), 
   -(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
   +(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
   -(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ;
    t(i, #1:Fresh) ; #2:Sessionkey)), nil]  & 
:: #1:Fresh,#6:Fresh ::
[ nil, 
   -(#7:Msg ; e(mkey(i, s), #0:UName ; i ; #4:Nonce ; #2:Sessionkey ;
    #3:Sessionkey)), 
   +(#7:Msg ; e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; n(i, #6:Fresh) ; e(
    mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)) | 
   -(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ;
    t(i, #1:Fresh) ; #2:Sessionkey)), nil] )
| 
mkey(i, s) !inI,
e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) !inI,
(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) !inI,
(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(i,
    #1:Fresh) ; #2:Sessionkey)) !inI,
e(#5:Key, #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) inI
| 
-(#5:Key), 
-(e(#5:Key, #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
+(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
+(mkey(i, s)), 
-(mkey(i, s)), 
-(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
+(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
-(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)), 
+(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(
    i, #1:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(
    i, #1:Fresh) ; #2:Sessionkey))
| ghost(#5:Key),
ghost(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)))
(< 1 . 5 . 6 . 2 . 6 > (
:: nil ::
[ nil | 
   +(mkey(i, s)), nil]  & 
:: nil ::
[ nil | 
   -(mkey(i, s)), 
   -(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
   +(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
   -(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ;
    t(i, #1:Fresh) ; #2:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(i ; t(i, #1:Fresh) ; #2:Sessionkey), 
   -(#0:UName), 
   +(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), nil]  & 
:: #1:Fresh,#5:Fresh ::
[ nil, 
   -(#6:Msg ; e(mkey(i, s), #0:UName ; i ; #4:Nonce ; #2:Sessionkey ;
    #3:Sessionkey)), 
   +(#6:Msg ; e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; n(i, #5:Fresh) ; e(
    mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)) | 
   -(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ;
    t(i, #1:Fresh) ; #2:Sessionkey)), nil] )
| 
mkey(i, s) !inI,
e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) !inI,
(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey) !inI,
(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(i,
    #1:Fresh) ; #2:Sessionkey)) !inI,
(i ; t(i, #1:Fresh) ; #2:Sessionkey) inI
| 
-(i ; t(i, #1:Fresh) ; #2:Sessionkey), 
-(#0:UName), 
+(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
+(mkey(i, s)), 
-(mkey(i, s)), 
-(#0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey), 
+(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
-(e(mkey(i, s), #0:UName ; i ; t(i, #1:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)), 
+(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(
    i, #1:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey) ; e(mkey(i, s), #0:UName ; i ; t(
    i, #1:Fresh) ; #2:Sessionkey))
| ghost(e(#3:Sessionkey, #4:Nonce ; #2:Sessionkey)))
(< 1 . 5 . 6 . 8 . 4 > (
:: nil ::
[ nil | 
   -(#0:Key), 
   -(e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(#1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(mkey(#2:UName, s)), 
   -(#1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey), 
   +(e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#7:Msg ; e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   +(e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)),
    nil]  & 
:: #3:Fresh,#8:Fresh ::
[ nil, 
   -(#9:Msg ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; #6:Nonce ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(#9:Msg ; e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey) ; n(#2:UName,
    #8:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #3:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)), nil] )
| 
e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey) !inI,
e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey) !inI,
(#1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey) !inI,
(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
mkey(#2:UName, s) inI,
(#7:Msg ; e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)) inI
| 
-(#7:Msg ; e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)), 
+(e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)), 
-(#0:Key), 
-(e(#0:Key, #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)), 
+(#1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey), 
-(mkey(#2:UName, s)), 
-(#1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey), 
+(e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey)), 
+(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #3:Fresh) ; #4:Sessionkey))
| ghost(#0:Key),
ghost(e(#5:Sessionkey, #6:Nonce ; #4:Sessionkey)))
(< 1 . 5 . 6 . 11 . 4 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Msg ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   -(#1:UName), 
   +(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: #2:Fresh,#7:Fresh ::
[ nil, 
   -(#8:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#8:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
(#6:Msg ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) inI
| 
-(#6:Msg ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#1:UName), 
+(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 6 . 11 . 6 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   -(#1:UName), 
   +(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -((#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #6:Msg), 
   +(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: #2:Fresh,#7:Fresh ::
[ nil, 
   -(#8:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#8:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
((#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #6:Msg) inI
| 
-((#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #6:Msg), 
+(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#1:UName), 
+(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 5 . 6 . 11 . 11 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   -(#1:UName), 
   +(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
   -(#0:UName), 
   +(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), nil]  & 
:: #2:Fresh,#6:Fresh ::
[ nil, 
   -(#7:Msg ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; #5:Nonce ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(#7:Msg ; e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; n(#0:UName,
    #6:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) !inI,
(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey) !inI,
(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
(t(#0:UName, #2:Fresh) ; #3:Sessionkey) inI
| 
-(t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#0:UName), 
+(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(#1:UName), 
+(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)), 
+(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| ghost(e(#4:Sessionkey, #5:Nonce ; #3:Sessionkey)))
(< 1 . 6 . 3 . 7 . 1 > (
:: #0:Fresh ::
[ nil | 
   +(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
   +(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ;
    seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), nil]  & 
:: #3:Fresh,#4:Fresh ::
[ nil | 
   -(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), nil]  & 
:: #5:Fresh,#6:Fresh ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
   -(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ;
    seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), nil] )
| 
(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))) !inI,
(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))) !inI
| 
+(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
-(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
+(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), 
-(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh))))
| 
nil)
(< 1 . 6 . 3 . 7 . 7 > (
:: nil ::
[ nil | 
   -(#0:UName ; n(#1:UName, #2:Fresh)), 
   -(#1:UName), 
   +(#1:UName ; #0:UName ; n(#1:UName, #2:Fresh)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #0:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; n(#0:UName,
    #5:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #6:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)))), 
   +(e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName, #2:Fresh) ;
    seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #6:Fresh) ; seskey(#1:UName, #0:UName, n(s,
    #3:Fresh)))), nil]  & 
:: #3:Fresh,#4:Fresh ::
[ nil | 
   -(#1:UName ; #0:UName ; n(#1:UName, #2:Fresh)), 
   +(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #0:UName, n(s, #4:Fresh)))), nil]  & 
:: #5:Fresh,#6:Fresh ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #0:UName, n(s, #4:Fresh)))), 
   +(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; n(#0:UName,
    #5:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #6:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)))), 
   -(e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName, #2:Fresh) ;
    seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; e(mkey(#0:UName, s), #1:UName
    ; #0:UName ; t(#0:UName, #6:Fresh) ; seskey(#1:UName, #0:UName, n(s,
    #3:Fresh)))), nil] )
| 
(#1:UName ; #0:UName ; n(#1:UName, #2:Fresh)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #0:UName, n(s, #4:Fresh)))) !inI,
(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; n(#0:UName,
    #5:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #6:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)))) !inI,
(e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh))) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; seskey(#1:UName, #0:UName, n(s,
    #3:Fresh)))) !inI,
(#0:UName ; n(#1:UName, #2:Fresh)) inI
| 
-(#0:UName ; n(#1:UName, #2:Fresh)), 
-(#1:UName), 
+(#1:UName ; #0:UName ; n(#1:UName, #2:Fresh)), 
-(#1:UName ; #0:UName ; n(#1:UName, #2:Fresh)), 
+(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #0:UName, n(s, #4:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #0:UName, n(s, #4:Fresh)))), 
+(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; n(#0:UName,
    #5:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #6:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #0:UName ; n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #0:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName,
    #2:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh))) ; n(#0:UName,
    #5:Fresh) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName,
    #6:Fresh) ; seskey(#1:UName, #0:UName, n(s, #3:Fresh)))), 
+(e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh))) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; seskey(#1:UName, #0:UName, n(s,
    #3:Fresh)))), 
-(e(seskey(#1:UName, #0:UName, n(s, #4:Fresh)), n(#1:UName, #2:Fresh) ; seskey(
    #1:UName, #0:UName, n(s, #3:Fresh))) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; seskey(#1:UName, #0:UName, n(s,
    #3:Fresh))))
| 
nil)
(< 1 . 6 . 3 . 6{1} . 2 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#4:Msg ; e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh)
    ; #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), nil]  & 
:: #1:Fresh ::
[ nil, 
   +(#0:UName ; #0:UName ; n(#0:UName, #1:Fresh)) | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), nil]  & 
:: #5:Fresh,#6:Fresh ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
   -(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) !inI,
(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName, s),
    #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)) !inI,
(#4:Msg ; e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)) inI
| 
-(#4:Msg ; e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
+(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{1} . 3 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; #4:Msg), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), nil]  & 
:: #1:Fresh ::
[ nil, 
   +(#0:UName ; #0:UName ; n(#0:UName, #1:Fresh)) | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), nil]  & 
:: #5:Fresh,#6:Fresh ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
   -(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) !inI,
(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName, s),
    #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; #4:Msg) inI
| 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; #4:Msg), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #5:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
+(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #6:Fresh) ; #2:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{1} . 6 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), nil]  & 
:: #1:Fresh ::
[ nil, 
   +(#0:UName ; #0:UName ; n(#0:UName, #1:Fresh)) | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #4:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), nil]  & 
:: #4:Fresh,#5:Fresh ::
[ nil | 
   -(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #4:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), 
   -(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) !inI,
(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName, s),
    #0:UName ; #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #4:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
(#0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)
    inI
| 
-(mkey(#0:UName, s)), 
-(#0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey),
    
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(mkey(#0:UName, s), #0:UName ; #0:UName ;
    n(#0:UName, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #4:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #0:UName ; n(#0:UName, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey) ; e(#3:Sessionkey, n(#0:UName, #1:Fresh) ;
    #2:Sessionkey) ; n(#0:UName, #4:Fresh) ; e(mkey(#0:UName, s), #0:UName ;
    #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), 
+(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, n(#0:UName, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#0:UName,
    s), #0:UName ; #0:UName ; t(#0:UName, #5:Fresh) ; #2:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{2} . 2 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#7:Msg ; e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #8:Fresh,#9:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#7:Msg ; e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)) inI,(
#1:UName != #2:UName),(
#1:UName != #0:UName),(
#1:UName != #6:UName),(
#2:UName != #0:UName),(
#2:UName != #6:UName),
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) != e(mkey(#0:UName, s), #1:UName ; #0:UName
    ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
| 
-(#7:Msg ; e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{2} . 4 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; #7:Msg), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #8:Fresh,#9:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; #7:Msg) inI,(
#1:UName != #2:UName),(
#1:UName != #0:UName),(
#1:UName != #6:UName),(
#2:UName != #0:UName),(
#2:UName != #6:UName),
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) != e(mkey(#0:UName, s), #1:UName ; #0:UName
    ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
| 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; #7:Msg), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{2} . 5 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; #7:Msg), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #8:Fresh,#9:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; #7:Msg) inI,(
#1:UName != #2:UName),(
#1:UName != #0:UName),(
#1:UName != #6:UName),(
#2:UName != #0:UName),(
#2:UName != #6:UName),
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) != e(mkey(#0:UName, s), #1:UName ; #0:UName
    ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
| 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; #7:Msg), 
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{2} . 10 > (
:: nil ::
[ nil | 
   -(mkey(#2:UName, s)), 
   -(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ;
    #5:Sessionkey), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh,#8:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
mkey(#2:UName, s) inI,
e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
    inI,(
#1:UName != #2:UName),(
#1:UName != #0:UName),(
#1:UName != #6:UName),(
#2:UName != #0:UName),(
#2:UName != #6:UName),
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) != e(mkey(#0:UName, s), #1:UName ; #0:UName
    ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
| 
-(mkey(#2:UName, s)), 
-(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey),
    
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 3 . 6{2} . 11 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ;
    #5:Sessionkey), 
   +(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #6:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh,#8:Fresh ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
    inI,(
#1:UName != #2:UName),(
#1:UName != #0:UName),(
#1:UName != #6:UName),(
#2:UName != #0:UName),(
#2:UName != #6:UName),
e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) != e(mkey(#0:UName, s), #1:UName ; #0:UName
    ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)
| 
-(mkey(#0:UName, s)), 
-(#1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey),
    
+(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #6:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#0:UName, #7:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 3 . 4 > (
:: nil ::
[ nil | 
   -(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#10:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ;
    #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh)
    ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #3:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #9:Fresh,#11:Fresh ::
[ nil, 
   -(#12:Msg ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#12:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #7:UName, #11:Fresh) ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName, s),
    #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)) inI,
(#10:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ;
    e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)) inI
| 
-(#10:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce
    ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 3 . 12 > (
:: nil ::
[ nil | 
   -(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName,
    #9:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #3:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #9:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#11:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #7:UName, #10:Fresh) ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName, s),
    #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) inI,
(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)) inI,
(#6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)) inI
| 
-(#6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 3 . 14 > (
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(mkey(
    #1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #11:Fresh ::
[ nil, 
   +(#10:UName ; #13:UName ; n(#10:UName, #11:Fresh)) | 
   -(e(mkey(#10:UName, s), #10:UName ; #13:UName ; n(#10:UName, #11:Fresh) ;
    #12:Sessionkey ; #9:Sessionkey) ; e(#9:Sessionkey, n(#10:UName, #11:Fresh)
    ; #12:Sessionkey) ; #14:Nonce ; e(mkey(#1:UName, s), #1:UName ; #8:UName ;
    n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey)), 
   +(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(mkey(
    #1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey)), nil]  & 
:: #7:Fresh,#15:Fresh ::
[ nil, 
   -(#16:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#16:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #15:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(mkey(#1:UName,
    s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    inI,
(e(mkey(#10:UName, s), #10:UName ; #13:UName ; n(#10:UName, #11:Fresh) ;
    #12:Sessionkey ; #9:Sessionkey) ; e(#9:Sessionkey, n(#10:UName, #11:Fresh)
    ; #12:Sessionkey) ; #14:Nonce ; e(mkey(#1:UName, s), #1:UName ; #8:UName ;
    n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey)) inI
| 
-(e(mkey(#10:UName, s), #10:UName ; #13:UName ; n(#10:UName, #11:Fresh) ;
    #12:Sessionkey ; #9:Sessionkey) ; e(#9:Sessionkey, n(#10:UName, #11:Fresh)
    ; #12:Sessionkey) ; #14:Nonce ; e(mkey(#1:UName, s), #1:UName ; #8:UName ;
    n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey)), 
+(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(mkey(#1:UName,
    s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey)), 
-(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(mkey(#1:UName,
    s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 3 . 6{1} > (
:: nil ::
[ nil | 
   -(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)) ; #10:Msg), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #3:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #9:Fresh,#11:Fresh ::
[ nil, 
   -(#12:Msg ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#12:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #7:UName, #11:Fresh) ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName, s),
    #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)) inI,
((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    ; #10:Msg) inI,(
#0:Msg != e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ;
    e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)),(
#10:Msg != e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)),
(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)) != (e(#5:Sessionkey, n(#1:UName, #3:Fresh)
    ; #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) ; #10:Msg
| 
-((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    ; #10:Msg), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(#0:Msg ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 3 . 6{2} > (
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)) ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)) ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #3:Fresh) ; #4:Sessionkey ; #5:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(
    mkey(#7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#1:UName ; #2:UName ; n(#1:UName, #3:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil]  & 
:: #9:Fresh,#11:Fresh ::
[ nil, 
   -(#12:Msg ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; n(#1:UName, #3:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#12:Msg ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #7:UName, #11:Fresh) ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName, s),
    #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)) !inI,
((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)) inI
| 
-((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-((e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
    ; e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; #6:Nonce ; e(mkey(
    #7:UName, s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #3:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#1:UName, #3:Fresh) ;
    #4:Sessionkey) ; #6:Nonce ; e(mkey(#7:UName, s), #8:UName ; #7:UName ; t(
    #7:UName, #9:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#1:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#7:UName,
    s), #8:UName ; #7:UName ; t(#7:UName, #9:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 4 . 3 > (
:: nil ::
[ nil | 
   -(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(
    #5:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #9:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #6:Fresh,#8:Fresh ::
[ nil | 
   -(#0:Msg ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; n(#2:UName, #3:Fresh)
    ; #4:Sessionkey ; #1:Sessionkey)), 
   +(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(
    #5:UName, #8:Fresh) ; #4:Sessionkey)), 
   -(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)) !inI,
(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#5:UName, s),
    #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)) !inI,
(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) inI,
(#0:Msg ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)) inI
| 
-(#0:Msg ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
+(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(
    #5:UName, #8:Fresh) ; #4:Sessionkey)), 
-(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(
    #5:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)), 
-(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(#5:UName,
    #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ; #5:UName ; t(#5:UName,
    #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; n(#5:UName, #6:Fresh) ; e(mkey(#5:UName, s), #7:UName ;
    #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#5:UName,
    s), #7:UName ; #5:UName ; t(#5:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 4 . 12 > (
:: nil ::
[ nil | 
   -(mkey(#2:UName, s)), 
   -(#2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ;
    #1:Sessionkey), 
   +(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ;
    #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh)
    ; #4:Sessionkey)), 
   +(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #9:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #8:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; n(#2:UName, #3:Fresh)
    ; #4:Sessionkey ; #1:Sessionkey)), 
   +(#11:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #6:UName, #10:Fresh) ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)) | 
   -(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) !inI,
(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName, s),
    #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
mkey(#2:UName, s) inI,
(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ;
    e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)) inI,
(#2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #1:Sessionkey)
    inI
| 
-(mkey(#2:UName, s)), 
-(#2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ; #4:Sessionkey ; #1:Sessionkey),
    
+(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
-(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ;
    e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
+(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
-(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 4 . 15 > (
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(
    #0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #11:Fresh ::
[ nil, 
   +(#10:UName ; #13:UName ; n(#10:UName, #11:Fresh)) | 
   -(e(mkey(#10:UName, s), #10:UName ; #13:UName ; n(#10:UName, #11:Fresh) ;
    #12:Sessionkey ; #9:Sessionkey) ; e(#9:Sessionkey, n(#10:UName, #11:Fresh)
    ; #12:Sessionkey) ; #14:Nonce ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(
    #0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #7:Fresh,#15:Fresh ::
[ nil, 
   -(#16:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#16:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #15:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(#0:Sessionkey,
    n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) inI,
(e(mkey(#10:UName, s), #10:UName ; #13:UName ; n(#10:UName, #11:Fresh) ;
    #12:Sessionkey ; #9:Sessionkey) ; e(#9:Sessionkey, n(#10:UName, #11:Fresh)
    ; #12:Sessionkey) ; #14:Nonce ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) inI
| 
-(e(mkey(#10:UName, s), #10:UName ; #13:UName ; n(#10:UName, #11:Fresh) ;
    #12:Sessionkey ; #9:Sessionkey) ; e(#9:Sessionkey, n(#10:UName, #11:Fresh)
    ; #12:Sessionkey) ; #14:Nonce ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(#0:Sessionkey,
    n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#9:Sessionkey, n(#10:UName, #11:Fresh) ; #12:Sessionkey) ; e(#0:Sessionkey,
    n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 4 . 6{1} > (
:: nil ::
[ nil | 
   -(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ;
    #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh)
    ; #4:Sessionkey)), 
   +(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
   +(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; #10:Msg), 
   +(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), nil]  & 
:: #3:Fresh ::
[ nil, 
   +(#2:UName ; #9:UName ; n(#2:UName, #3:Fresh)) | 
   -(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), 
   +(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)), nil]  & 
:: #8:Fresh,#11:Fresh ::
[ nil, 
   -(#12:Msg ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; n(#2:UName, #3:Fresh)
    ; #4:Sessionkey ; #1:Sessionkey)), 
   +(#12:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; n(
    #6:UName, #11:Fresh) ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)) | 
   -(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)), nil] )
| 
e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) !inI,
(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName, s),
    #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)) !inI,
(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ;
    e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)) inI,
(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; #10:Msg) inI,(
#0:Msg != e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)),(
#10:Msg != e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ;
    e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)),
(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ;
    e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)) != e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName,
    #3:Fresh) ; #4:Sessionkey ; #1:Sessionkey) ; #10:Msg
| 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; #10:Msg), 
+(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
-(#0:Msg ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ;
    e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
+(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
-(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey)), 
+(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#2:UName, s), #2:UName ; #9:UName ; n(#2:UName, #3:Fresh) ;
    #4:Sessionkey ; #1:Sessionkey) ; e(#1:Sessionkey, n(#2:UName, #3:Fresh) ;
    #4:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #4:Sessionkey)), 
+(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey)), 
-(e(#1:Sessionkey, n(#2:UName, #3:Fresh) ; #4:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 5 . 6 > (
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)) ; #10:Msg), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#11:Fresh ::
[ nil, 
   -(#12:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#12:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #11:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg) inI,
((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    ; #10:Msg) inI
| 
-((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    ; #10:Msg), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 5 . 13 > (
:: nil ::
[ nil | 
   -(#4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName,
    #7:Fresh) ; #3:Sessionkey)), 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#11:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #10:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) inI,
(#4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)) inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg) inI
| 
-(#4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; #9:Msg), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 6 . 13 > (
:: nil ::
[ nil | 
   -(mkey(#1:UName, s)), 
   -(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ;
    #0:Sessionkey), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
   +(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)) ; #9:Msg), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(
    mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh)) | 
   -(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
   +(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil]  & 
:: #7:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(#1:UName, #2:Fresh)
    ; #3:Sessionkey ; #0:Sessionkey)), 
   +(#11:Msg ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #5:UName, #10:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) | 
   -(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)) !inI,
mkey(#1:UName, s) inI,
(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey)
    inI,
((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    ; #9:Msg) inI
| 
-(mkey(#1:UName, s)), 
-(#1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ; #3:Sessionkey ; #0:Sessionkey),
    
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
-((e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
    ; #9:Msg), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey)), 
+(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#1:UName, s), #1:UName ; #8:UName ; n(#1:UName, #2:Fresh) ;
    #3:Sessionkey ; #0:Sessionkey) ; e(#0:Sessionkey, n(#1:UName, #2:Fresh) ;
    #3:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(
    #5:UName, #7:Fresh) ; #3:Sessionkey)), 
+(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey)), 
-(e(#0:Sessionkey, n(#1:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 11 . 3 > (
:: nil ::
[ nil | 
   +(mkey(i, s)), nil]  & 
:: nil ::
[ nil | 
   -(mkey(i, s)), 
   -(i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey), 
   +(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #2:Sessionkey)), 
   -(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey)), 
   +(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey) ; e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ;
    #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh)
    ; #2:Sessionkey)), nil]  & 
:: #1:Fresh ::
[ nil, 
   +(i ; #0:UName ; n(i, #1:Fresh)) | 
   -(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey) ; e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ;
    #4:Nonce ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh)
    ; #2:Sessionkey)), 
   +(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey)), nil]  & 
:: #7:Fresh,#8:Fresh ::
[ nil, 
   -(#9:Msg ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; n(i, #1:Fresh) ;
    #2:Sessionkey ; #3:Sessionkey)), 
   +(#9:Msg ; e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; n(#5:UName,
    #8:Fresh) ; e(mkey(#5:UName, s), #6:UName ; #5:UName ; t(#5:UName,
    #7:Fresh) ; #2:Sessionkey)) | 
   -(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey)), nil] )
| 
mkey(i, s) !inI,
e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)
    !inI,
(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey)) !inI,
(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey) ;
    e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey))
    !inI,
(i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey) inI,
(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; #4:Nonce ; e(mkey(#5:UName,
    s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey)) inI
| 
+(mkey(i, s)), 
-(mkey(i, s)), 
-(i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey), 
+(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey)), 
-(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #2:Sessionkey)), 
-(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ;
    #3:Sessionkey)), 
+(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)
    ; e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #2:Sessionkey)), 
-(e(mkey(i, s), i ; #0:UName ; n(i, #1:Fresh) ; #2:Sessionkey ; #3:Sessionkey)
    ; e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; #4:Nonce ; e(mkey(
    #5:UName, s), #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ;
    #2:Sessionkey)), 
+(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey)), 
-(e(#3:Sessionkey, n(i, #1:Fresh) ; #2:Sessionkey) ; e(mkey(#5:UName, s),
    #6:UName ; #5:UName ; t(#5:UName, #7:Fresh) ; #2:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 11 . 11 > (
:: nil ::
[ nil | 
   -(#9:Key), 
   -(e(#9:Key, #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey)), 
   +(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey), 
   +(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh)) | 
   -(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #8:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; n(#0:UName, #2:Fresh)
    ; #3:Sessionkey ; #4:Sessionkey)), 
   +(#11:Msg ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #6:UName, #10:Fresh) ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) !inI,
(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey)
    !inI,
(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName, s),
    #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
e(#9:Key, #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey) inI,
(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
    inI
| 
-(#9:Key), 
-(e(#9:Key, #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey)), 
+(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey),
    
-(mkey(#0:UName, s)), 
-(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey),
    
+(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
| ghost(#9:Key))
(< 1 . 6 . 8 . 11 . 16 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey), 
   +(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName,
    #8:Fresh) ; #3:Sessionkey)), 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh)) | 
   -(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #8:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; n(#0:UName, #2:Fresh)
    ; #3:Sessionkey ; #4:Sessionkey)), 
   +(#10:Msg ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #6:UName, #9:Fresh) ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) !inI,
(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName, s),
    #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
    !inI,
(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) inI,
(#5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)) inI,
(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey)
    inI
| 
-(#5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
-(mkey(#0:UName, s)), 
-(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey),
    
+(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 11 . 17 > (
:: nil ::
[ nil | 
   -(mkey(#0:UName, s)), 
   -(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey), 
   +(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey), 
   -(#0:UName), 
   +(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ;
    #4:Sessionkey), nil]  & 
:: nil ::
[ nil | 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(
    mkey(#6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
   -(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
   +(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #2:Fresh ::
[ nil, 
   +(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh)) | 
   -(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil]  & 
:: #8:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; n(#0:UName, #2:Fresh)
    ; #3:Sessionkey ; #4:Sessionkey)), 
   +(#10:Msg ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; n(
    #6:UName, #9:Fresh) ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), nil] )
| 
e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) !inI,
(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey)
    !inI,
(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName, s),
    #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)) !inI,
mkey(#0:UName, s) inI,
(#1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey) inI,
(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
    inI
| 
-(#1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey), 
-(#0:UName), 
+(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey),
    
-(mkey(#0:UName, s)), 
-(#0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ; #3:Sessionkey ; #4:Sessionkey),
    
+(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; #5:Nonce ; e(mkey(
    #6:UName, s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ;
    #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey)), 
+(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #0:UName ; #1:UName ; n(#0:UName, #2:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#0:UName, #2:Fresh) ;
    #3:Sessionkey) ; #5:Nonce ; e(mkey(#6:UName, s), #7:UName ; #6:UName ; t(
    #6:UName, #8:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#0:UName, #2:Fresh) ; #3:Sessionkey) ; e(mkey(#6:UName,
    s), #7:UName ; #6:UName ; t(#6:UName, #8:Fresh) ; #3:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 12 . 3 > (
:: nil ::
[ nil | 
   -(#9:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh ::
[ nil, 
   +(#6:UName ; #8:UName ; n(#6:UName, #7:Fresh)) | 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; n(#6:UName, #7:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#11:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; n(
    #1:UName, #10:Fresh) ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil] )
| 
e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName, s),
    #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#9:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)) inI,
(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)) inI
| 
-(#9:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
-(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 12 . 5 > (
:: nil ::
[ nil | 
   -(#9:Msg ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
   +(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh ::
[ nil, 
   +(#6:UName ; #8:UName ; n(#6:UName, #7:Fresh)) | 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; n(#6:UName, #7:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#11:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; n(
    #1:UName, #10:Fresh) ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil] )
| 
(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName, s),
    #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) inI,
e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#9:Msg ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)) inI
| 
-(#9:Msg ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
+(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 12 . 6 > (
:: nil ::
[ nil | 
   -(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #9:Msg), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh ::
[ nil, 
   +(#6:UName ; #8:UName ; n(#6:UName, #7:Fresh)) | 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh,#10:Fresh ::
[ nil, 
   -(#11:Msg ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; n(#6:UName, #7:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#11:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; n(
    #1:UName, #10:Fresh) ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil] )
| 
e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName, s),
    #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)) inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #9:Msg) inI
| 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #9:Msg), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
-(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
| 
nil)
(< 1 . 6 . 8 . 12 . 15 > (
:: nil ::
[ nil | 
   -(#5:Sessionkey), 
   -(n(#6:UName, #7:Fresh) ; #4:Sessionkey), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh ::
[ nil, 
   +(#6:UName ; #8:UName ; n(#6:UName, #7:Fresh)) | 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; n(#6:UName, #7:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#10:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; n(
    #1:UName, #9:Fresh) ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil] )
| 
e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName, s),
    #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI,
(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)) inI,
(n(#6:UName, #7:Fresh) ; #4:Sessionkey) inI
| 
-(#5:Sessionkey), 
-(n(#6:UName, #7:Fresh) ; #4:Sessionkey), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
-(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
| ghost(#5:Sessionkey))
(< 1 . 6 . 8 . 12 . 17 > (
:: nil ::
[ nil | 
   -(e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(#0:Nonce), 
   +(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName,
    #3:Fresh) ; #4:Sessionkey)), 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), nil]  & 
:: nil ::
[ nil | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(
    mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
   +(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #7:Fresh ::
[ nil, 
   +(#6:UName ; #8:UName ; n(#6:UName, #7:Fresh)) | 
   -(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
   +(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil]  & 
:: #3:Fresh,#9:Fresh ::
[ nil, 
   -(#10:Msg ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; n(#6:UName, #7:Fresh)
    ; #4:Sessionkey ; #5:Sessionkey)), 
   +(#10:Msg ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; n(
    #1:UName, #9:Fresh) ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) | 
   -(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), nil] )
| 
#0:Nonce !inI,
(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName, s),
    #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
    !inI,
(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)) !inI,
e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) inI,
e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey) inI,
e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) inI
| 
generatedByIntruder(#0:Nonce), 
-(e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(#0:Nonce), 
+(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(#0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; #0:Nonce ; e(mkey(
    #1:UName, s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ;
    #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey)), 
+(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(mkey(#6:UName, s), #6:UName ; #8:UName ; n(#6:UName, #7:Fresh) ;
    #4:Sessionkey ; #5:Sessionkey) ; e(#5:Sessionkey, n(#6:UName, #7:Fresh) ;
    #4:Sessionkey) ; #0:Nonce ; e(mkey(#1:UName, s), #2:UName ; #1:UName ; t(
    #1:UName, #3:Fresh) ; #4:Sessionkey)), 
+(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey)), 
-(e(#5:Sessionkey, n(#6:UName, #7:Fresh) ; #4:Sessionkey) ; e(mkey(#1:UName,
    s), #2:UName ; #1:UName ; t(#1:UName, #3:Fresh) ; #4:Sessionkey))
| 
nil)
< 1 . 5 . 2 . 7 . 3 . 0 > (
:: nil ::
[ nil | 
   -(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
   -(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil]  & 
:: #6:Fresh ::
[ nil, 
   +(#5:UName ; #7:UName ; n(#5:UName, #6:Fresh)), 
   -(e(mkey(#5:UName, s), #5:UName ; #7:UName ; n(#5:UName, #6:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#5:UName, #6:Fresh) ;
    #3:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
   +(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) | nil]  &
    
:: #2:Fresh,#8:Fresh ::
[ nil, 
   -(e(mkey(#5:UName, s), #5:UName ; #7:UName ; n(#5:UName, #6:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(mkey(#0:UName, s), #1:UName ; #0:UName ;
    n(#5:UName, #6:Fresh) ; #3:Sessionkey ; #4:Sessionkey)), 
   +(e(mkey(#5:UName, s), #5:UName ; #7:UName ; n(#5:UName, #6:Fresh) ;
    #3:Sessionkey ; #4:Sessionkey) ; e(#4:Sessionkey, n(#5:UName, #6:Fresh) ;
    #3:Sessionkey) ; n(#0:UName, #8:Fresh) ; e(mkey(#0:UName, s), #1:UName ;
    #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) | 
   -(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), nil] )
| 
(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) ; e(mkey(#0:UName, s),
    #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)) !inI,
e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) inI,
e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey) inI
| 
resuscitated(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey)), 
-(e(mkey(#0:UName, s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ;
    #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey)), 
+(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey)), 
-(e(#4:Sessionkey, n(#5:UName, #6:Fresh) ; #3:Sessionkey) ; e(mkey(#0:UName,
    s), #1:UName ; #0:UName ; t(#0:UName, #2:Fresh) ; #3:Sessionkey))
| 
nil
==========================================
reduce in MAUDE-NPA : initials(4) .
rewrites: 1273 in 0ms cpu (0ms real) (~ rewrites/second)
result ShortIdSystem: < 1 . 6 . 3 . 7 . 1 > (
:: #0:Fresh ::
[ nil | 
   +(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
   +(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ;
    seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), nil]  & 
:: #3:Fresh,#4:Fresh ::
[ nil | 
   -(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), nil]  & 
:: #5:Fresh,#6:Fresh ::
[ nil | 
   -(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
   +(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
   -(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ;
    seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName
    ; #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), nil] )
| 
(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))) !inI,
(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))) !inI,
(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))) !inI
| 
+(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
-(#1:UName ; #2:UName ; n(#1:UName, #0:Fresh)), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName,
    #2:UName, n(s, #4:Fresh)))), 
+(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
-(e(mkey(#1:UName, s), #1:UName ; #2:UName ; n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh)) ; seskey(#1:UName, #2:UName, n(s,
    #4:Fresh))) ; e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName,
    #0:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh))) ; n(#2:UName,
    #5:Fresh) ; e(mkey(#2:UName, s), #1:UName ; #2:UName ; t(#2:UName,
    #6:Fresh) ; seskey(#1:UName, #2:UName, n(s, #3:Fresh)))), 
+(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh)))), 
-(e(seskey(#1:UName, #2:UName, n(s, #4:Fresh)), n(#1:UName, #0:Fresh) ; seskey(
    #1:UName, #2:UName, n(s, #3:Fresh))) ; e(mkey(#2:UName, s), #1:UName ;
    #2:UName ; t(#2:UName, #6:Fresh) ; seskey(#1:UName, #2:UName, n(s,
    #3:Fresh))))
| 
nil
Bye.
Tue Jun  2 19:47:47 CEST 2020
